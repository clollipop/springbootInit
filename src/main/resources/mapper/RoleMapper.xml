<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.star.springbootinit.mapper.RoleMapper">

    <resultMap id="BaseResultMap" type="com.star.springbootinit.model.entity.Role">
            <id property="roleId" column="roleId" jdbcType="BIGINT"/>
            <result property="roleName" column="roleName" jdbcType="VARCHAR"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
            <result property="createBy" column="createBy" jdbcType="VARCHAR"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        roleId,roleName,remark,
        createBy,createTime,updateTime
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from role
        where  roleId = #{roleId,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from role
        where  roleId = #{roleId,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="roleId" keyProperty="roleId" parameterType="com.star.springbootinit.model.entity.Role" useGeneratedKeys="true">
        insert into role
        ( roleId,roleName,remark
        ,createBy,createTime,updateTime
        )
        values (#{roleId,jdbcType=BIGINT},#{roleName,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR}
        ,#{createBy,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="roleId" keyProperty="roleId" parameterType="com.star.springbootinit.model.entity.Role" useGeneratedKeys="true">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="roleId != null">roleId,</if>
                <if test="roleName != null">roleName,</if>
                <if test="remark != null">remark,</if>
                <if test="createBy != null">createBy,</if>
                <if test="createTime != null">createTime,</if>
                <if test="updateTime != null">updateTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="roleId != null">#{roleId,jdbcType=BIGINT},</if>
                <if test="roleName != null">#{roleName,jdbcType=VARCHAR},</if>
                <if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
                <if test="createBy != null">#{createBy,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.star.springbootinit.model.entity.Role">
        update role
        <set>
                <if test="roleName != null">
                    roleName = #{roleName,jdbcType=VARCHAR},
                </if>
                <if test="remark != null">
                    remark = #{remark,jdbcType=VARCHAR},
                </if>
                <if test="createBy != null">
                    createBy = #{createBy,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    createTime = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    updateTime = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   roleId = #{roleId,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.star.springbootinit.model.entity.Role">
        update role
        set 
            roleName =  #{roleName,jdbcType=VARCHAR},
            remark =  #{remark,jdbcType=VARCHAR},
            createBy =  #{createBy,jdbcType=VARCHAR},
            createTime =  #{createTime,jdbcType=TIMESTAMP},
            updateTime =  #{updateTime,jdbcType=TIMESTAMP}
        where   roleId = #{roleId,jdbcType=BIGINT} 
    </update>
</mapper>
