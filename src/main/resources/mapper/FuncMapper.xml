<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.star.springbootinit.mapper.FuncMapper">

    <resultMap id="BaseResultMap" type="com.star.springbootinit.model.entity.Func">
            <id property="funcId" column="funcId" jdbcType="BIGINT"/>
            <result property="parentId" column="parentId" jdbcType="BIGINT"/>
            <result property="funcName" column="funcName" jdbcType="VARCHAR"/>
            <result property="funcUrl" column="funcUrl" jdbcType="VARCHAR"/>
            <result property="funcType" column="funcType" jdbcType="TINYINT"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createBy" column="createBy" jdbcType="VARCHAR"/>
            <result property="updateBy" column="updateBy" jdbcType="VARCHAR"/>
            <result property="sortNum" column="sortNum" jdbcType="INTEGER"/>
            <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        funcId,parentId,funcName,
        funcUrl,funcType,status,
        createBy,updateBy,sortNum,
        createTime,updateTime
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from func
        where  funcId = #{funcId,jdbcType=BIGINT} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from func
        where  funcId = #{funcId,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="funcId" keyProperty="funcId" parameterType="com.star.springbootinit.model.entity.Func" useGeneratedKeys="true">
        insert into func
        ( funcId,parentId,funcName
        ,funcUrl,funcType,status
        ,createBy,updateBy,sortNum
        ,createTime,updateTime)
        values (#{funcId,jdbcType=BIGINT},#{parentId,jdbcType=BIGINT},#{funcName,jdbcType=VARCHAR}
        ,#{funcUrl,jdbcType=VARCHAR},#{funcType,jdbcType=TINYINT},#{status,jdbcType=TINYINT}
        ,#{createBy,jdbcType=VARCHAR},#{updateBy,jdbcType=VARCHAR},#{sortNum,jdbcType=INTEGER}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="funcId" keyProperty="funcId" parameterType="com.star.springbootinit.model.entity.Func" useGeneratedKeys="true">
        insert into func
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="funcId != null">funcId,</if>
                <if test="parentId != null">parentId,</if>
                <if test="funcName != null">funcName,</if>
                <if test="funcUrl != null">funcUrl,</if>
                <if test="funcType != null">funcType,</if>
                <if test="status != null">status,</if>
                <if test="createBy != null">createBy,</if>
                <if test="updateBy != null">updateBy,</if>
                <if test="sortNum != null">sortNum,</if>
                <if test="createTime != null">createTime,</if>
                <if test="updateTime != null">updateTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="funcId != null">#{funcId,jdbcType=BIGINT},</if>
                <if test="parentId != null">#{parentId,jdbcType=BIGINT},</if>
                <if test="funcName != null">#{funcName,jdbcType=VARCHAR},</if>
                <if test="funcUrl != null">#{funcUrl,jdbcType=VARCHAR},</if>
                <if test="funcType != null">#{funcType,jdbcType=TINYINT},</if>
                <if test="status != null">#{status,jdbcType=TINYINT},</if>
                <if test="createBy != null">#{createBy,jdbcType=VARCHAR},</if>
                <if test="updateBy != null">#{updateBy,jdbcType=VARCHAR},</if>
                <if test="sortNum != null">#{sortNum,jdbcType=INTEGER},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.star.springbootinit.model.entity.Func">
        update func
        <set>
                <if test="parentId != null">
                    parentId = #{parentId,jdbcType=BIGINT},
                </if>
                <if test="funcName != null">
                    funcName = #{funcName,jdbcType=VARCHAR},
                </if>
                <if test="funcUrl != null">
                    funcUrl = #{funcUrl,jdbcType=VARCHAR},
                </if>
                <if test="funcType != null">
                    funcType = #{funcType,jdbcType=TINYINT},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="createBy != null">
                    createBy = #{createBy,jdbcType=VARCHAR},
                </if>
                <if test="updateBy != null">
                    updateBy = #{updateBy,jdbcType=VARCHAR},
                </if>
                <if test="sortNum != null">
                    sortNum = #{sortNum,jdbcType=INTEGER},
                </if>
                <if test="createTime != null">
                    createTime = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    updateTime = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   funcId = #{funcId,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.star.springbootinit.model.entity.Func">
        update func
        set 
            parentId =  #{parentId,jdbcType=BIGINT},
            funcName =  #{funcName,jdbcType=VARCHAR},
            funcUrl =  #{funcUrl,jdbcType=VARCHAR},
            funcType =  #{funcType,jdbcType=TINYINT},
            status =  #{status,jdbcType=TINYINT},
            createBy =  #{createBy,jdbcType=VARCHAR},
            updateBy =  #{updateBy,jdbcType=VARCHAR},
            sortNum =  #{sortNum,jdbcType=INTEGER},
            createTime =  #{createTime,jdbcType=TIMESTAMP},
            updateTime =  #{updateTime,jdbcType=TIMESTAMP}
        where   funcId = #{funcId,jdbcType=BIGINT} 
    </update>
</mapper>
